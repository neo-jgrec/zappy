name: Deploy static content to Pages

on:
  push:
    branches: ['docs']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

env:
  TEST_BINARIES: "ai_unit_tests gui_unit_tests server_unit_tests"
  PROJECTS: "src/ai src/gui src/server"

jobs:
  deploy:
    if: github.repository == 'neo-jgrec/zappy'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install latest version of gcovr
        run: |
          pip install --upgrade pip
          pip install gcovr==7.2

      - name: Fetch all branches
        working-directory: ${{ github.workspace }}
        run: |
          git config --global --add safe.directory /__w/zappy/zappy
          git fetch --all

      - name: Checkout `main` branch
        working-directory: ${{ github.workspace }}
        run: git checkout main

      - name: Build the tests
        working-directory: ${{ github.workspace }}
        run: make tests_run

      - name: Run the tests
        working-directory: ${{ github.workspace }}
        run: |
          for binary in $TEST_BINARIES; do
            ./$binary --verbose --always-succeed --ignore-warnings
          done

      - name: Generate coverage report
        working-directory: ${{ github.workspace }}
        run: |
          mkdir -p _coverage
          for project in $PROJECTS; do
            gcovr . -r $project --html --html-nested -o _coverage/${project##*/}.html --exclude $project/tests --html-theme github.dark-blue --html-title "Coverage report for ${project##*/}"
          done

      - name: Switch to `docs` branch with coverage report
        working-directory: ${{ github.workspace }}
        run: |
          git checkout docs
          mkdir -p static/_coverage
          mv _coverage/* static/_coverage

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './build'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
